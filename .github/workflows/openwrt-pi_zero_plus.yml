#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: Openwrt-PI_Zero_Plus

on:
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master
        #      ↑↑↑ 改成你的分支名, 一般是master

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php
          sudo -E apt-get -y purge \
            azure-cli \
            ghc* \
            zulu* \
            hhvm \
            llvm* \
            firefox \
            google* \
            dotnet* \
            powershell \
            openjdk* \
            mysql* \
            php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean 
      
      - name: Add Customized Themes and Apps
        run: |
          cd package/lean
          rm -rf luci-theme-argon
          git clone https://github.com/jerrykuku/luci-theme-argon.git
          git clone https://github.com/vernesong/OpenClash.git
          git clone https://github.com/jerrykuku/lua-maxminddb.git lua-maxminddb
          git clone https://github.com/jerrykuku/luci-app-vssr.git luci-app-vssr
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Costom configure file
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # ========================固件定制部分========================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 
          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_sunxi=y
          CONFIG_TARGET_sunxi_cortexa53=y
          CONFIG_TARGET_sunxi_cortexa53_DEVICE_xunlong_orangepi-zero-plus=y
          EOF
          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF
          # 编译UEFI固件:
          cat >> .config <<EOF
          CONFIG_EFI_IMAGES=y
          EOF
          # IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          EOF
          # 多文件系统支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-fs-nfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common=y
          CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          CONFIG_PACKAGE_kmod-fs-squashfs=y
          EOF
          # USB3.0支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          EOF
          # 常用LuCI插件选择:
          cat >> .config <<EOF
          CONFIG_TARGET_BOARD="sunxi"
          CONFIG_TARGET_SUBTARGET="cortexa53"
          CONFIG_TARGET_PROFILE="DEVICE_xunlong_orangepi-zero-plus"
          CONFIG_TARGET_ARCH_PACKAGES="aarch64_cortex-a53"
          CONFIG_DEFAULT_TARGET_OPTIMIZATION="-Os -pipe -mcpu=cortex-a53"
          CONFIG_CPU_TYPE="cortex-a53"
          CONFIG_LINUX_4_19=y
          CONFIG_DEFAULT_base-files=y
          CONFIG_DEFAULT_block-mount=y
          CONFIG_DEFAULT_busybox=y
          CONFIG_DEFAULT_coremark=y
          CONFIG_DEFAULT_ddns-scripts_aliyun=y
          CONFIG_DEFAULT_ddns-scripts_dnspod=y
          CONFIG_DEFAULT_default-settings=y
          CONFIG_DEFAULT_dnsmasq-full=y
          CONFIG_DEFAULT_dropbear=y
          CONFIG_DEFAULT_e2fsprogs=y
          CONFIG_DEFAULT_firewall=y
          CONFIG_DEFAULT_fstools=y
          CONFIG_DEFAULT_iptables=y
          CONFIG_DEFAULT_kmod-ipt-offload=y
          CONFIG_DEFAULT_kmod-ipt-raw=y
          CONFIG_DEFAULT_kmod-ipip=y
          CONFIG_DEFAULT_kmod-nf-nathelper=y
          CONFIG_DEFAULT_kmod-nf-nathelper-extra=y
          CONFIG_DEFAULT_kmod-tcp-bbr=y
          CONFIG_DEFAULT_libc=y
          CONFIG_DEFAULT_libgcc=y
          CONFIG_DEFAULT_libustream-openssl=y
          CONFIG_DEFAULT_logd=y
          CONFIG_DEFAULT_luci=y
          CONFIG_DEFAULT_luci-app-accesscontrol=y
          CONFIG_DEFAULT_luci-app-arpbind=y
          CONFIG_DEFAULT_luci-app-autoreboot=y
          CONFIG_DEFAULT_luci-app-ddns=y
          CONFIG_DEFAULT_luci-app-filetransfer=y
          CONFIG_DEFAULT_luci-app-flowoffload=y
          CONFIG_DEFAULT_luci-app-nlbwmon=y
          CONFIG_DEFAULT_luci-app-pptp-server=y
          CONFIG_DEFAULT_luci-app-ramfree=y
          CONFIG_DEFAULT_luci-app-sfe=y
          CONFIG_DEFAULT_luci-app-upnp=y
          CONFIG_DEFAULT_luci-app-vsftpd=y
          CONFIG_DEFAULT_luci-app-wol=y
          CONFIG_DEFAULT_mkf2fs=y
          CONFIG_DEFAULT_mtd=y
          CONFIG_DEFAULT_netifd=y
          CONFIG_DEFAULT_opkg=y
          CONFIG_DEFAULT_partx-utils=y
          CONFIG_DEFAULT_ppp=y
          CONFIG_DEFAULT_ppp-mod-pppoe=y
          CONFIG_DEFAULT_uboot-envtools=y
          CONFIG_DEFAULT_uci=y
          CONFIG_DEFAULT_uclient-fetch=y
          CONFIG_DEFAULT_urandom-seed=y
          CONFIG_DEFAULT_urngd=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_v2ray=y
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_shadowsocksr-libev-server=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          CONFIG_PACKAGE_shadowsocksr-libev-alt=y
          CONFIG_PACKAGE_luci-app-vssr=y
          CONFIG_PACKAGE_lua-maxminddb=y
          EOF
          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          CONFIG_PACKAGE_luci-theme-material=y
          CONFIG_PACKAGE_luci-theme-netgear=y

          EOF
          # 常用软件包:
          cat >> .config <<EOF
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_tree=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_wget=y
          CONFIG_PACKAGE_ip-full=y
          CONFIG_PACKAGE_jsonfilter=y
          CONFIG_PACKAGE_ca-certificates=y
          CONFIG_PACKAGE_ca-bundle=y
          CONFIG_PACKAGE_libcurl=y
          CONFIG_PACKAGE_python=y
          CONFIG_PACKAGE_bash=y
          CONFIG_DEFAULT_dnsmasq-full=y
          CONFIG_PACKAGE_luci-app-dnspod=y
          CONFIG_DEFAULT_ddns-scripts_aliyun=y
          CONFIG_DEFAULT_ddns-scripts_dnspod=y
          CONFIG_DEFAULT_iptables=y
          CONFIG_PACKAGE_kmod-tun=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_coreutils-base64=y
          CONFIG_PACKAGE_coreutils-nohup=y
          EOF
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_PAD is not set
          # CONFIG_VMDK_IMAGES is not set
          EOF
          # 
          # ========================固件定制部分结束========================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          /bin/bash IP-Openwrt-PI.sh
          make defconfig
          
      - name: Download package source code
        run: |
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s

      - name: Check error
        run: |
          make -j1 V=s
      - name : Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: bin/targets
